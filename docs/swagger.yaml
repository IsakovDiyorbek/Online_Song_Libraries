definitions:
  models.AddSongRequest:
    properties:
      group_name:
        description: Название группы
        type: string
      link:
        description: Ссылка на песню
        type: string
      release_date:
        description: Дата релиза
        type: string
      song_name:
        description: Название песни
        type: string
      text:
        description: Текст песни
        type: string
    type: object
  models.AddSongResponse:
    properties:
      id:
        description: ID добавленной песни
        type: string
      message:
        description: Сообщение о результате
        type: string
      success:
        description: Успех операции
        type: boolean
    type: object
  models.Song:
    properties:
      created_at:
        description: Дата создания записи
        type: string
      group_name:
        description: Название группы
        type: string
      id:
        type: string
      link:
        description: Ссылка на песню
        type: string
      release_date:
        description: Дата релиза
        type: string
      song_name:
        description: Название песни
        type: string
      text:
        description: Текст песни
        type: string
      updated_at:
        description: Дата обновления записи
        type: string
    type: object
  models.UpdateSongRequest:
    properties:
      group_name:
        type: string
      id:
        type: string
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      text:
        type: string
    type: object
  models.VerseResponse:
    properties:
      id:
        type: string
      text:
        type: string
      verseNum:
        type: integer
    type: object
info:
  contact: {}
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Get songs from the library
      parameters:
      - description: Group name
        in: query
        name: group_name
        type: string
      - description: Song name
        in: query
        name: song_name
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Add new song to the library
      parameters:
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.AddSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AddSongResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Add new song
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AddSongResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AddSongResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update song
      tags:
      - songs
  /songs/{id}/verse/{verseNum}:
    get:
      consumes:
      - application/json
      description: Get song text by verse number
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Verse number
        in: path
        name: verseNum
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VerseResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get song text by verse number
      tags:
      - songs
  /songs/all:
    get:
      consumes:
      - application/json
      description: Get all songs from the library
      parameters:
      - description: Group name
        in: query
        name: group_name
        type: string
      - description: Song name
        in: query
        name: song_name
        type: string
      - description: Text
        in: query
        name: text
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all songs
      tags:
      - songs
swagger: "2.0"
